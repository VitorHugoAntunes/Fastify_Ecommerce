// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id         String   @id @default(uuid())
  username   String   @unique
  email      String   @unique
  password   String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  Cart       Cart[]
  Order      Order[]
}

model Product {
  id           String        @id @default(uuid())
  title        String
  description  String
  price        Float
  created_at   DateTime      @default(now())
  updated_at   DateTime      @updatedAt
  photos       Photo[]
  stock        Stock[]
  cartProducts CartProduct[]
}

model Photo {
  id         String  @id @default(uuid())
  product_id String  @map("product_id")
  photo_url  String
  product    Product @relation(fields: [product_id], references: [id], onDelete: Cascade)
}

model Stock {
  id         String   @id @default(uuid())
  product_id String   @map("product_id")
  product    Product  @relation(fields: [product_id], references: [id])
  quantity   Int
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model Cart {
  id           String        @id @default(uuid())
  user_id      String        @unique @map("user_id")
  order_id     String?       @map("order_id")
  cartProducts CartProduct[]
  user         User?         @relation(fields: [user_id], references: [id])
  order        Order[]
}

model CartProduct {
  id        String  @id @default(uuid())
  cartId    String  @map("cart_id")
  productId String  @map("product_id")
  quantity  Int
  cart      Cart    @relation(fields: [cartId], references: [id])
  product   Product @relation(fields: [productId], references: [id])
}

model Order {
  id           String   @id @default(uuid())
  user_id      String   @map("user_id")
  cart_id      String   @map("cart_id")
  payment_type String
  total_amount Float
  created_at   DateTime @default(now())
  updated_at   DateTime @updatedAt
  user         User?    @relation(fields: [user_id], references: [id])
  cart         Cart?    @relation(fields: [cart_id], references: [id])
}
